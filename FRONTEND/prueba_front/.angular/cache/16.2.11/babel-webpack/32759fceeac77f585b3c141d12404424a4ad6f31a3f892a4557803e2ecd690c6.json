{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiURL = 'http://127.0.0.1:8000/api/cargos/delete';\n  }\n  viewCargos() {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/cargos`);\n  }\n  saveCargo(inputData) {\n    return this.httpClient.post(this.apiURL + '/cargos-add', inputData);\n  }\n  destroyCargos(id) {\n    const url = `${this.apiURL}/${id}`;\n    return this.httpClient.delete(url);\n  }\n  destroyCargo(id) {\n    return this.httpClient.delete(this.apiURL + \"/\" + id);\n  }\n  static #_ = this.ɵfac = function ServiceService_Factory(t) {\n    return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceService,\n    factory: ServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ServiceService","constructor","httpClient","apiURL","viewCargos","get","saveCargo","inputData","post","destroyCargos","id","url","delete","destroyCargo","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\xampp\\htdocs\\laravel\\backfront-\\frontend\\prueba_front\\src\\app\\cargos\\service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cargo } from './cargo';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServiceService {\n\n  readonly apiURL = 'http://127.0.0.1:8000/api/cargos/delete';\n\n  constructor(private httpClient:HttpClient) { }\n\n  viewCargos():Observable<any[]> {\n    return this.httpClient.get<any>(`http://127.0.0.1:8000/api/cargos`);\n  }\n\n  saveCargo(inputData: object){\n    return this.httpClient.post(this.apiURL + '/cargos-add', inputData);\n  }\n  destroyCargos(id: number): Observable<any> {\n    const url = `${this.apiURL}/${id}`;\n    return this.httpClient.delete(url);\n  }\n\n  destroyCargo (id:number):Observable<number>{\n    return this.httpClient.delete<number>(this.apiURL+\"/\"+id);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAFrB,KAAAC,MAAM,GAAG,yCAAyC;EAEd;EAE7CC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAM,kCAAkC,CAAC;EACrE;EAEAC,SAASA,CAACC,SAAiB;IACzB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,IAAI,CAACL,MAAM,GAAG,aAAa,EAAEI,SAAS,CAAC;EACrE;EACAE,aAAaA,CAACC,EAAU;IACtB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,UAAU,CAACU,MAAM,CAACD,GAAG,CAAC;EACpC;EAEAE,YAAYA,CAAEH,EAAS;IACrB,OAAO,IAAI,CAACR,UAAU,CAACU,MAAM,CAAS,IAAI,CAACT,MAAM,GAAC,GAAG,GAACO,EAAE,CAAC;EAC3D;EAAC,QAAAI,CAAA,G;qBApBUd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnB,cAAc;IAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;IAAAC,UAAA,EAHb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}