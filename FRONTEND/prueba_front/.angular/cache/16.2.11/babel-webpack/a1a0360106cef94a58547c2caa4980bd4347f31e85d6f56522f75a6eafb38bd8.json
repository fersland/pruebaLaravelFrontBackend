{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let CargosComponent = class CargosComponent {\n  getCargosdata() {\n    this.service.viewCargos().subscribe(response => {\n      this.cargos = response;\n    });\n  }\n  changeUsuarios(e) {\n    console.log(e.target.value);\n    this.SelectedValue = e.target.value;\n  }\n  constructor(formbuilder, service) {\n    this.formbuilder = formbuilder;\n    this.service = service;\n    this.cargarDataUsuarios = [];\n  }\n  ngOnInit() {\n    this.cargosList$ = this.service.viewCargos();\n    this.loadDataUsuarios();\n    this.formGroup = this.formbuilder.group({\n      id: [''],\n      codigo: [' ', [Validators.required, Validators.pattern('a-zA-ZñÑá-úÁ-Ú')]],\n      nombre: [' ', [Validators.required, Validators.pattern('a-zA-ZñÑá-úÁ-Ú')]],\n      activo: [' ', [Validators.required]],\n      idUsuario: [' ', [Validators.required]]\n    });\n    this.service.getUsuarios().subscribe(dataListarUsuarios => {\n      this.UsuariosList = dataListarUsuarios;\n    });\n  }\n  insertData() {\n    console.log(this.formGroup.value);\n    this.service.saveCargo(this.formGroup.value).subscribe(response => {\n      console.log('Cargo added successfully!');\n      this.cargosList$ = this.service.viewCargos();\n      this.formGroup.reset();\n    });\n  }\n  loadDataUsuarios() {\n    this.service.getUsuarios().subscribe(result => {\n      this.cargarDataUsuarios = result;\n    });\n  }\n  deleteCargo(id) {\n    if (confirm(\"Seguro desea eliminar este registro?\")) {\n      this.service.destroyCargo(id).subscribe(book => {\n        this.cargosList$ = this.service.viewCargos();\n      });\n    }\n  }\n  // ACTUALIZAR ++++++++++++++++++++++++\n  editCargo(car) {\n    this.formGroup.controls['id'].setValue(car.id);\n    this.formGroup.controls['nombre'].setValue(car.nombre);\n    this.formGroup.controls['activo'].setValue(car.activo);\n    this.formGroup.controls['idUsuario'].setValue(car.idUsuario);\n  }\n};\nCargosComponent = __decorate([Component({\n  selector: 'app-cargos',\n  templateUrl: './cargos.component.html',\n  styleUrls: ['./cargos.component.sass']\n})], CargosComponent);","map":{"version":3,"names":["Component","Validators","CargosComponent","getCargosdata","service","viewCargos","subscribe","response","cargos","changeUsuarios","e","console","log","target","value","SelectedValue","constructor","formbuilder","cargarDataUsuarios","ngOnInit","cargosList$","loadDataUsuarios","formGroup","group","id","codigo","required","pattern","nombre","activo","idUsuario","getUsuarios","dataListarUsuarios","UsuariosList","insertData","saveCargo","reset","result","deleteCargo","confirm","destroyCargo","book","editCargo","car","controls","setValue","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\fersl\\OneDrive\\Documentos\\GitHub\\pruebalaravelfrontbackend\\frontend\\prueba_front\\src\\app\\cargos\\cargos.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ServiceService } from './service.service';\r\nimport { Cargo } from './cargo';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-cargos',\r\n  templateUrl: './cargos.component.html',\r\n  styleUrls: ['./cargos.component.sass']\r\n})\r\nexport class CargosComponent implements OnInit {\r\n  cargosList$!:Observable<any[]>;\r\n  cargos:any;\r\n\r\n  getCargosdata(){\r\n    this.service.viewCargos().subscribe(response => {\r\n      this.cargos = response;\r\n    })\r\n  }\r\n\r\n  UsuariosList: any;\r\n  SelectedValue:any;\r\n  changeUsuarios(e){\r\n    console.log(e.target.value);\r\n    this.SelectedValue=e.target.value;\r\n  }\r\n\r\n  formGroup :FormGroup;\r\n  constructor(private formbuilder:FormBuilder, private service:ServiceService){ }\r\n\r\n  ngOnInit(): void{    \r\n    this.cargosList$ = this.service.viewCargos();\r\n    this.loadDataUsuarios();\r\n\r\n    this.formGroup = this.formbuilder.group({\r\n      id:[''],\r\n      codigo:[' ',[Validators.required,Validators.pattern('a-zA-ZñÑá-úÁ-Ú')]],\r\n      nombre:[' ',[Validators.required,Validators.pattern('a-zA-ZñÑá-úÁ-Ú')]],\r\n      activo:[' ',[Validators.required]],\r\n      idUsuario:[' ',[Validators.required]]\r\n    })\r\n\r\n    this.service.getUsuarios().subscribe((dataListarUsuarios: any) => {\r\n      this.UsuariosList = dataListarUsuarios;\r\n      });\r\n  }\r\n\r\n  insertData(){\r\n    console.log(this.formGroup.value);\r\n    this.service.saveCargo(this.formGroup.value).subscribe(response => {\r\n      console.log('Cargo added successfully!');\r\n      this.cargosList$ = this.service.viewCargos();\r\n      this.formGroup.reset();\r\n    })\r\n  }\r\n\r\n  cargarDataUsuarios: any[] = [];\r\n  loadDataUsuarios() {\r\n    this.service.getUsuarios().subscribe((result) => {\r\n      this.cargarDataUsuarios = result;\r\n    });\r\n  }\r\n\r\n  deleteCargo(id:number){\r\n    if(confirm(\"Seguro desea eliminar este registro?\")){\r\n      this.service.destroyCargo(id)\r\n      .subscribe(book=>{\r\n        this.cargosList$ = this.service.viewCargos();\r\n      })\r\n    }  \r\n  }\r\n\r\n  // ACTUALIZAR ++++++++++++++++++++++++\r\n\r\n  editCargo(car : Cargo) {\r\n    this.formGroup.controls['id'].setValue(car.id);\r\n    this.formGroup.controls['nombre'].setValue(car.nombre);\r\n    this.formGroup.controls['activo'].setValue(car.activo);\r\n    this.formGroup.controls['idUsuario'].setValue(car.idUsuario);\r\n  \r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}