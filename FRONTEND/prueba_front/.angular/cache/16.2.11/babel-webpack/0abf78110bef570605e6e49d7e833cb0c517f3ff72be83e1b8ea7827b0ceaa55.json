{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuariosService {\n  constructor(httpCliente) {\n    this.httpCliente = httpCliente;\n    this.apiURL = 'http://127.0.0.1:8000/api/usuarios';\n    this.apiURLEdit = 'http://127.0.0.1:8000/api/usuarios-edit';\n  }\n  viewUsuarios() {\n    return this.httpCliente.get(`http://127.0.0.1:8000/api/usuarios`);\n  }\n  getUsuariosId(id) {\n    return this.httpCliente.get(`http://127.0.0.1:8000/api/usuarios/show/` + id);\n  }\n  getDataCargos() {\n    return this.httpCliente.get(`http://127.0.0.1:8000/api/cargos`);\n  }\n  getDataDepartamentos() {\n    return this.httpCliente.get(`http://127.0.0.1:8000/api/departamentos`);\n  }\n  saveUsuario(model) {\n    return this.httpCliente.post(this.apiURL + `/store`, model);\n  }\n  updateData(id, newData) {\n    const url = `${this.apiURLEdit}/${id}`;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.httpClient.put(url, newData, {\n      headers\n    });\n  }\n  destroyUsuario(id) {\n    return this.httpCliente.delete(this.apiURL + \"/\" + id);\n  }\n  static #_ = this.ɵfac = function UsuariosService_Factory(t) {\n    return new (t || UsuariosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UsuariosService","constructor","httpCliente","apiURL","apiURLEdit","viewUsuarios","get","getUsuariosId","id","getDataCargos","getDataDepartamentos","saveUsuario","model","post","updateData","newData","url","headers","HttpHeaders","httpClient","put","destroyUsuario","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\fersl\\OneDrive\\Documentos\\GitHub\\pruebalaravelfrontbackend\\frontend\\prueba_front\\src\\app\\usuarios\\usuarios.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Usuario } from './usuario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosService {\r\n\r\n  constructor(private httpCliente: HttpClient) { }\r\n  apiURL = 'http://127.0.0.1:8000/api/usuarios';\r\n  readonly apiURLEdit = 'http://127.0.0.1:8000/api/usuarios-edit';\r\n\r\n  viewUsuarios():Observable<any[]>{\r\n    return this.httpCliente.get<any>(`http://127.0.0.1:8000/api/usuarios`);\r\n  }\r\n\r\n  getUsuariosId(id){\r\n    return this.httpCliente.get(`http://127.0.0.1:8000/api/usuarios/show/`+ id);\r\n  }\r\n\r\n  getDataCargos(): Observable<any[]> {\r\n    return this.httpCliente.get<any[]>(`http://127.0.0.1:8000/api/cargos`);\r\n  }\r\n\r\n  getDataDepartamentos(): Observable<any[]> {\r\n    return this.httpCliente.get<any[]>(`http://127.0.0.1:8000/api/departamentos`);\r\n  }\r\n\r\n  saveUsuario(model:Usuario):Observable<Usuario>{\r\n    return this.httpCliente.post<Usuario>(this.apiURL + `/store`,model);\r\n  }\r\n\r\n  updateData(id:number, newData: any): Observable<any> {\r\n    const url = `${this.apiURLEdit}/${id}`;\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.httpClient.put(url, newData, { headers });\r\n  }\r\n\r\n  destroyUsuario (id:number):Observable<number>{\r\n    return this.httpCliente.delete<number>(this.apiURL+\"/\"+id);\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAC/B,KAAAC,MAAM,GAAG,oCAAoC;IACpC,KAAAC,UAAU,GAAG,yCAAyC;EAFhB;EAI/CC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,WAAW,CAACI,GAAG,CAAM,oCAAoC,CAAC;EACxE;EAEAC,aAAaA,CAACC,EAAE;IACd,OAAO,IAAI,CAACN,WAAW,CAACI,GAAG,CAAC,0CAA0C,GAAEE,EAAE,CAAC;EAC7E;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,WAAW,CAACI,GAAG,CAAQ,kCAAkC,CAAC;EACxE;EAEAI,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACR,WAAW,CAACI,GAAG,CAAQ,yCAAyC,CAAC;EAC/E;EAEAK,WAAWA,CAACC,KAAa;IACvB,OAAO,IAAI,CAACV,WAAW,CAACW,IAAI,CAAU,IAAI,CAACV,MAAM,GAAG,QAAQ,EAACS,KAAK,CAAC;EACrE;EAEAE,UAAUA,CAACN,EAAS,EAAEO,OAAY;IAChC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACZ,UAAU,IAAII,EAAE,EAAE;IACtC,MAAMS,OAAO,GAAG,IAAIC,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAEvE,OAAO,IAAI,CAACC,UAAU,CAACC,GAAG,CAACJ,GAAG,EAAED,OAAO,EAAE;MAAEE;IAAO,CAAE,CAAC;EACvD;EAEAI,cAAcA,CAAEb,EAAS;IACvB,OAAO,IAAI,CAACN,WAAW,CAACoB,MAAM,CAAS,IAAI,CAACnB,MAAM,GAAC,GAAG,GAACK,EAAE,CAAC;EAC5D;EAAC,QAAAe,CAAA,G;qBAnCUvB,eAAe,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAf5B,eAAe;IAAA6B,OAAA,EAAf7B,eAAe,CAAA8B,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}