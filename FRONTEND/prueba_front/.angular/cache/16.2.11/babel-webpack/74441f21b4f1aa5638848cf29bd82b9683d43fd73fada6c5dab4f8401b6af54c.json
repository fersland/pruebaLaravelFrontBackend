{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiURL = 'http://127.0.0.1:8000/api/cargos';\n  }\n  viewCargos() {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/cargos`);\n  }\n  saveCargos(cargo) {\n    return this.httpClient.post(this.apiURL + \"/add\" + cargo);\n  }\n  saveCargo(cargo) {\n    let httpheaders = new HttpHeaders().set('Content-type', 'application/Json');\n    let options = {\n      headers: httpheaders\n    };\n    return this.httpClient.post(this.apiURL + \"/add\", cargo, options);\n  }\n  /*\n    destroyCargos(id: number): Observable<any> {\n      const url = `${this.apiURL}/${id}`;\n      return this.httpClient.delete(url);\n    }\n  */\n  destroyCargo(id) {\n    return this.httpClient.delete(this.apiURL + \"/\" + id);\n  }\n  static #_ = this.ɵfac = function ServiceService_Factory(t) {\n    return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceService,\n    factory: ServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ServiceService","constructor","httpClient","apiURL","viewCargos","get","saveCargos","cargo","post","saveCargo","httpheaders","set","options","headers","destroyCargo","id","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\xampp\\htdocs\\laravel\\backfront-\\frontend\\prueba_front\\src\\app\\cargos\\service.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cargo } from './cargo';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServiceService {\n\n  readonly apiURL = 'http://127.0.0.1:8000/api/cargos';\n\n  constructor(private httpClient:HttpClient) { }\n\n  viewCargos():Observable<any[]> {\n    return this.httpClient.get<any>(`http://127.0.0.1:8000/api/cargos`);\n  }\n\n  saveCargos(cargo:Cargo):Observable<Cargo>{\n    return this.httpClient.post<Cargo>(this.apiURL + \"/add\" + cargo);\n  }\n\n  saveCargo(cargo:Cargo):Observable<Cargo>{\n    let httpheaders=new HttpHeaders()\n    .set('Content-type','application/Json');\n    let options={\n      headers:httpheaders\n    };\n    return this.httpClient.post<Cargo>(this.apiURL + \"/add\",cargo,options);\n  }\n/*\n  destroyCargos(id: number): Observable<any> {\n    const url = `${this.apiURL}/${id}`;\n    return this.httpClient.delete(url);\n  }\n*/\n  destroyCargo (id:number):Observable<number>{\n    return this.httpClient.delete<number>(this.apiURL+\"/\"+id);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAS9D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAFrB,KAAAC,MAAM,GAAG,kCAAkC;EAEP;EAE7CC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAM,kCAAkC,CAAC;EACrE;EAEAC,UAAUA,CAACC,KAAW;IACpB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAQ,IAAI,CAACL,MAAM,GAAG,MAAM,GAAGI,KAAK,CAAC;EAClE;EAEAE,SAASA,CAACF,KAAW;IACnB,IAAIG,WAAW,GAAC,IAAIX,WAAW,EAAE,CAChCY,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACvC,IAAIC,OAAO,GAAC;MACVC,OAAO,EAACH;KACT;IACD,OAAO,IAAI,CAACR,UAAU,CAACM,IAAI,CAAQ,IAAI,CAACL,MAAM,GAAG,MAAM,EAACI,KAAK,EAACK,OAAO,CAAC;EACxE;EACF;;;;;;EAMEE,YAAYA,CAAEC,EAAS;IACrB,OAAO,IAAI,CAACb,UAAU,CAACc,MAAM,CAAS,IAAI,CAACb,MAAM,GAAC,GAAG,GAACY,EAAE,CAAC;EAC3D;EAAC,QAAAE,CAAA,G;qBA9BUjB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdtB,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;IAAAC,UAAA,EAHb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}